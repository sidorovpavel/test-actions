name: Realise for pull request

on:
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  set-version:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: get commits list
        uses: actions/github-script@v4
        id: commits-list
        with:
          github-token: ${{secrets.TOKEN}}
          script: |
            const commits = await github.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            const jira_matcher = /\d+-[A-Z]+(?!-?[a-zA-Z]{1,10})/g;
            const issues = commits.data.reduce((issues, item) => {
              const names = item.commit.message.split("").reverse().join("").match(jira_matcher);
              if (!names) {
                return issues;
              }
              names.forEach(res => {
                const id = res.split("").reverse().join("");
                if(issues.indexOf(id)===-1) {
                  issues.push(id)
                }
              })
              return issues;
            }, []);
            return JSON.stringify(issues);
          result-encoding: string
      - name: set version
        uses: actions/github-script@v4
        id: jira-version-set
        with:
          jira-token: ${{secrets.JIRA_TOKEN}}
          jira-user: ${{secrets.JIRA_USER}}
          jira-domain: 'tangem'
          release-version: 'test'
          project-name: 'MM'
          issues: ${{steps.commits-list.outputs.result}}
          script: |
            const myInput = core.getInput('issues', { required: true });
            console.log(myInput);


